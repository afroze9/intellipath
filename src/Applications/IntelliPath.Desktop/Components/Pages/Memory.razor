@page "/memory"
@using IntelliPath.Desktop.Services
@using IntelliPath.Shared.Models.Orchestrator

<PageTitle>Memory</PageTitle>

<FluentCard>
    <FluentLabel Typo="Typography.H1">Memory</FluentLabel>
    <FluentLabel>Coming Soon...</FluentLabel>
    <FluentButton OnClick="SaveMemory">Test</FluentButton>

    <FluentDataGrid Items="@Memories">
        <PropertyColumn Property="@(p => string.Join(", ", p.Tags))" Sortable="true" />
        <PropertyColumn Property="@(p => p.Description)" Sortable="true" />
    </FluentDataGrid>
</FluentCard>

@code
{
    [Inject] private IMemoryClient MemoryClient { get; set; } = default!;
    
    private IQueryable<MemoryModel> Memories { get; set; } = new List<MemoryModel>().AsQueryable();

    protected override async Task OnInitializedAsync()
    {
        List<MemoryModel> memories = await MemoryClient.GetMemoriesAsync();
        Memories = memories.AsQueryable();
        StateHasChanged();
    }

    private async Task SaveMemory(MouseEventArgs obj)
    {
        await MemoryClient.SaveMemoryAsync(new MemoryModel()
        {
            Tags = ["personal_info"],
            Description = "My name is Afroze and I'm a solution architect",
        });
    }
}